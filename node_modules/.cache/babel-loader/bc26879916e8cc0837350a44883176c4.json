{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/reactJsTest/reacttest/src/component/Main/Button.js\";\nimport React from 'react';\nimport './Button.css';\nimport logo from './images/logo.png';\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      opened: false,\n      opening_crawl: '',\n      people: '',\n      species: ''\n    };\n    this.toggleBox = this.toggleBox.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://swapi.co/api/films/\").then(res => res.json()).then(result => {\n      var longest = '';\n      var result1 = result.results;\n      var opening_crawl = '';\n\n      for (let i = 1; i < result1.length; i++) {\n        if (result1[i]['opening_crawl'].length > longest.length) {\n          longest = result1[i]['opening_crawl'];\n          opening_crawl = result1[i];\n        }\n      }\n\n      this.setState({\n        opening_crawl: opening_crawl['title']\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true // error\n\n      });\n    }); // people\n\n    fetch(\"https://swapi.co/api/people/\").then(res => res.json()).then(result => {\n      var longest = '';\n      var result1 = result.results;\n      var people = '';\n\n      for (let i = 1; i < result1.length; i++) {\n        if (result1[i]['films'].length > longest.length) {\n          longest = result1[i]['films'];\n          people = result1[i];\n        }\n      }\n\n      this.setState({\n        people: people['name']\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true // error\n\n      });\n    }); // people\n\n    fetch(\"https://swapi.co/api/species/\").then(res => res.json()).then(result => {\n      var longest = '';\n      var result1 = result.results;\n      var species = '';\n      var speciesArray = [];\n      var speciesIndex = [];\n\n      for (let i = 1; i < result1.length; i++) {\n        longest = result1[i]['films'];\n        speciesArray.push({\n          'lengthA': longest.length,\n          'name': result1[i].name\n        }); // speciesIndex.push(result1[i]);\n        // species = result1[i];\n      }\n\n      speciesArray.sort(function (a, b) {\n        return b.lengthA - a.lengthA;\n      });\n      console.log(speciesArray.slice(0, 3));\n      this.setState({\n        species: speciesArray.slice(0, 3)\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true // error\n\n      });\n    });\n  }\n\n  toggleBox() {\n    const opened = this.state.opened;\n    this.setState({\n      opened: !opened\n    });\n  }\n\n  render() {\n    const lapsList = this.state.symbolDataNew.map(data => {\n      var swipeoutBtns = [{\n        color: '#fff',\n        component: this.icon('line-chart', 'white'),\n        backgroundColor: 'green',\n        onPress: () => {\n          this.goToChart(data);\n        }\n      }, {\n        backgroundColor: '#ff2f2f',\n        color: '#fff',\n        component: this.icon('trash-o', 'white'),\n        onPress: () => {\n          this.showModal(data);\n        }\n      }];\n      count++;\n\n      if (count % 2 == 0) {\n        backgroundColor = \"#001346\";\n      } else {\n        backgroundColor = \"#000b29\";\n      }\n\n      var change = Number(data.change);\n      var date = new Date(data.latestUpdate); //  var n = d.toLocaleString([], { hour: '2-digit', minute: '2-digit' });\n      // var res = d.split(\" \");\n\n      var hours = date.getHours();\n      var hours = date.getHours() == 0 ? 12 : date.getHours() > 12 ? date.getHours() - 12 : date.getHours();\n\n      if (hours < 10) {\n        var time = '0' + hours;\n      }\n\n      var min = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n\n      if (min < 10) {\n        var time = '0' + min;\n      }\n\n      var ampm = date.getHours() < 12 ? 'AM' : 'PM';\n      var time = hours + ':' + min + ' ' + ampm;\n\n      if (change >= 0) {\n        return React.createElement(Swipeout, {\n          right: swipeoutBtns,\n          autoClose: true,\n          close: true,\n          key: count,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            backgroundColor: backgroundColor,\n            paddingHorizontal: 15,\n            paddingVertical: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(View, {\n          style: {\n            flex: 0.5,\n            justifyContent: \"center\",\n            alignItems: \"flex-start\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(Text, {\n          style: [Fonts.fontNormal, {\n            color: 'green',\n            fontSize: 16\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, data.symbol), React.createElement(Text, {\n          style: [Fonts.fontNormal, {\n            color: 'green',\n            fontSize: 13\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, data.companyName)), React.createElement(View, {\n          style: {\n            flex: 0.25,\n            justifyContent: \"flex-start\",\n            alignItems: \"flex-end\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, React.createElement(Text, {\n          style: [Fonts.fontNormal, {\n            color: 'green',\n            fontSize: 16\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, data.latestPrice, \" \", React.createElement(IconI, {\n          name: \"md-arrow-up\",\n          size: 16,\n          color: '#008000',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        })), React.createElement(Text, {\n          style: [Fonts.fontNormal, {\n            color: 'green',\n            fontSize: 13\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, time)), React.createElement(View, {\n          style: {\n            flex: 0.25,\n            justifyContent: \"flex-start\",\n            alignItems: \"flex-end\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(Text, {\n          style: [Fonts.fontNormal, {\n            color: 'green',\n            fontSize: 16\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, \"+ \", Number(data.change).toFixed(2)), React.createElement(Text, {\n          style: [Fonts.fontNormal, {\n            color: 'green',\n            fontSize: 13\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, \"+ \", (Number(data.changePercent) * 100).toFixed(2), \"%\"))));\n      } else {\n        return React.createElement(Swipeout, {\n          right: swipeoutBtns,\n          key: count,\n          autoClose: true,\n          close: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(View, {\n          style: {\n            flexDirection: 'row',\n            backgroundColor: backgroundColor,\n            paddingHorizontal: 15,\n            paddingVertical: 8\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, React.createElement(View, {\n          style: {\n            flex: 0.5,\n            justifyContent: \"center\",\n            alignItems: \"flex-start\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, React.createElement(Text, {\n          style: [Fonts.fontNormal, {\n            color: 'red',\n            fontSize: 16\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, data.symbol), React.createElement(Text, {\n          style: [Fonts.fontNormal, {\n            color: 'red',\n            fontSize: 13\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, data.companyName)), React.createElement(View, {\n          style: {\n            flex: 0.25,\n            justifyContent: \"flex-start\",\n            alignItems: \"flex-end\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, React.createElement(Text, {\n          style: [Fonts.fontNormal, {\n            color: 'red',\n            fontSize: 16\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, data.latestPrice, \" \", React.createElement(IconI, {\n          name: \"md-arrow-down\",\n          size: 16,\n          color: '#ff2f2f',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        })), React.createElement(Text, {\n          style: [Fonts.fontNormal, {\n            color: 'red',\n            fontSize: 13\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, time)), React.createElement(View, {\n          style: {\n            flex: 0.25,\n            justifyContent: \"flex-start\",\n            alignItems: \"flex-end\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, React.createElement(Text, {\n          style: [Fonts.fontNormal, {\n            color: 'red',\n            fontSize: 16\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, Number(data.change).toFixed(2)), React.createElement(Text, {\n          style: [Fonts.fontNormal, {\n            color: 'red',\n            fontSize: 13\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, (Number(data.changePercent) * 100).toFixed(2), \"%\"))));\n      }\n    });\n    const opened = this.state.opened;\n    return React.createElement(\"div\", {\n      className: \"container main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"img-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"buttonName\",\n      onClick: this.toggleBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Do. Or do not. There is no try \"), opened && React.createElement(\"div\", {\n      className: \"boxContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Which of all StarWars movies has the longest opening crawl?\"), React.createElement(\"p\", {\n      className: \"ans\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, this.state.opening_crawl), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"What character (person) appeared in the most of StarWars films?\"), React.createElement(\"p\", {\n      className: \"ans\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, this.state.people), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"What species appeared in the most number of StarWars films?\"), React.createElement(\"p\", {\n      className: \"ans\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, this.state.species))));\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Desktop/reactJsTest/reacttest/src/component/Main/Button.js"],"names":["React","logo","Header","Component","constructor","props","state","opened","opening_crawl","people","species","toggleBox","bind","componentDidMount","fetch","then","res","json","result","longest","result1","results","i","length","setState","error","isLoaded","speciesArray","speciesIndex","push","name","sort","a","b","lengthA","console","log","slice","render","lapsList","symbolDataNew","map","data","swipeoutBtns","color","component","icon","backgroundColor","onPress","goToChart","showModal","count","change","Number","date","Date","latestUpdate","hours","getHours","time","min","getMinutes","ampm","flexDirection","paddingHorizontal","paddingVertical","flex","justifyContent","alignItems","Fonts","fontNormal","fontSize","symbol","companyName","latestPrice","toFixed","changePercent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Button.css';\nimport logo from './images/logo.png';\n\n\n\nexport default class Header extends React.Component {\n\n  constructor(props) {\n  \t\tsuper(props);\n  \t\tthis.state = {\n  \t\t\topened: false,\n        opening_crawl:'',\n        people:'',\n        species:'',\n  \t\t};\n  \t\tthis.toggleBox = this.toggleBox.bind(this);\n  \t}\n\n  componentDidMount() {\n\n    fetch(\"https://swapi.co/api/films/\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n\n      var longest='';\n      var result1 = result.results;\n      var opening_crawl = '';\n\n\n      for (let i = 1; i < result1.length; i++) {\n          if (result1[i]['opening_crawl'].length > longest.length) {\n              longest = result1[i]['opening_crawl'];\n\n              opening_crawl = result1[i];\n          }\n      }\n      this.setState({opening_crawl:opening_crawl['title']});\n\n\n        },\n\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            // error\n          });\n        }\n      )\n\n      // people\n\n      fetch(\"https://swapi.co/api/people/\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n\n        var longest='';\n        var result1 = result.results;\n        var people = '';\n\n\n        for (let i = 1; i < result1.length; i++) {\n\n            if (result1[i]['films'].length > longest.length) {\n                longest = result1[i]['films'];\n                people = result1[i];\n            }\n        }\n\n        this.setState({people:people['name']});\n\n\n          },\n\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              // error\n            });\n          }\n        )\n\n\n\n        // people\n\n        fetch(\"https://swapi.co/api/species/\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n\n          var longest='';\n          var result1 = result.results;\n          var species = '';\n\n          var speciesArray = [];\n          var speciesIndex = [];\n\n          for (let i = 1; i < result1.length; i++) {\n\n\n                  longest = result1[i]['films'];\n                  speciesArray.push({'lengthA':longest.length,'name':result1[i].name});\n                  // speciesIndex.push(result1[i]);\n                  // species = result1[i];\n\n          }\n\n\n          speciesArray.sort(function(a,b) {\n              return b.lengthA - a.lengthA;\n            });\n\n            console.log(speciesArray.slice(0, 3));\n\n          this.setState({species:speciesArray.slice(0, 3)});\n\n\n            },\n\n            (error) => {\n              this.setState({\n                isLoaded: true,\n                // error\n              });\n            }\n          )\n\n\n\n\n }\n\n  \ttoggleBox() {\n\n\n\n  \t\tconst { opened } = this.state;\n  \t\tthis.setState({\n  \t\t\topened: !opened,\n  \t\t});\n  \t}\n\n\n  render() {\n\n\n    const lapsList = this.state.symbolDataNew.map((data) => {\n\n        var swipeoutBtns = [\n          {\n            color: '#fff',\n            component: this.icon('line-chart', 'white'),\n            backgroundColor: 'green',\n            onPress: () => { this.goToChart(data) }\n          },\n          {\n            backgroundColor: '#ff2f2f',\n            color: '#fff',\n            component: this.icon('trash-o', 'white'),\n            onPress: () => { this.showModal(data) }\n          },\n        ]\n\n\n\n\n      count++;\n\n      if(count%2==0)\n      {\n        backgroundColor =\"#001346\";\n      }\n      else{\n        backgroundColor =\"#000b29\";\n      }\n\n          var change = Number(data.change);\n\n          var date = new Date(data.latestUpdate);\n\n        //  var n = d.toLocaleString([], { hour: '2-digit', minute: '2-digit' });\n        // var res = d.split(\" \");\n\n\n        var hours = date.getHours();\n        var hours = date.getHours() == 0 ? 12 : (date.getHours() > 12 ? date.getHours() - 12 : date.getHours());\n          if(hours<10){\n            var time = '0'+hours;\n              }\n              var min = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n\n              if(min<10){\n                           var time = '0'+min;\n                         }\n              var ampm = date.getHours() < 12 ? 'AM' : 'PM';\n              var time = hours + ':' + min + ' ' + ampm;\n\n\n\n    if(change >= 0){\n\n        return (\n          <Swipeout\n          right={swipeoutBtns}\n          autoClose={true}\n          close={true}\n          key={count}\n          >\n                <View style={{ flexDirection: 'row', backgroundColor: backgroundColor,  paddingHorizontal: 15,paddingVertical:8 }}>\n                  <View style={{ flex: 0.5, justifyContent: \"center\", alignItems: \"flex-start\" }}>\n                    <Text style={[Fonts.fontNormal, { color: 'green', fontSize: 16, }]}>\n                    {data.symbol}\n                      </Text>\n                    <Text style={[Fonts.fontNormal, { color: 'green', fontSize: 13 }]}>\n                    {data.companyName}\n                      </Text>\n                  </View>\n                  <View style={{ flex: 0.25, justifyContent: \"flex-start\", alignItems: \"flex-end\" }}>\n\n\n                    <Text style={[Fonts.fontNormal, { color: 'green', fontSize: 16,}]}>\n                      {data.latestPrice} <IconI name=\"md-arrow-up\" size={16} color={'#008000'}/>\n                    </Text>\n                    <Text style={[Fonts.fontNormal, { color: 'green', fontSize: 13 }]}>\n                      {time}\n                    </Text>\n                  </View>\n                  <View style={{ flex: 0.25, justifyContent: \"flex-start\", alignItems: \"flex-end\", }}>\n                    <Text style={[Fonts.fontNormal, { color: 'green', fontSize: 16 }]}>\n                      + {Number(data.change).toFixed(2)}\n                    </Text>\n                    <Text style={[Fonts.fontNormal, { color: 'green', fontSize: 13 }]}>\n                      + {(Number(data.changePercent)*100).toFixed(2)}%\n                      </Text>\n                  </View>\n                </View>\n              </Swipeout>\n\n        )\n    }\n    else\n    {\n     return (\n          <Swipeout\n           right={swipeoutBtns}\n           key={count}\n           autoClose={true}\n           close={true}\n          >\n              <View style={{ flexDirection: 'row', backgroundColor: backgroundColor, paddingHorizontal: 15,paddingVertical:8}}>\n                <View style={{ flex: 0.5, justifyContent: \"center\", alignItems: \"flex-start\" }}>\n                  <Text style={[Fonts.fontNormal, { color: 'red', fontSize: 16, }]}>\n                    {data.symbol}\n                      </Text>\n                  <Text style={[Fonts.fontNormal, { color: 'red', fontSize: 13 }]}>\n                   {data.companyName}\n                      </Text>\n                </View>\n                <View style={{ flex: 0.25, justifyContent: \"flex-start\", alignItems: \"flex-end\" }}>\n                  <Text style={[Fonts.fontNormal, { color: 'red', fontSize: 16 }]}>\n                    {data.latestPrice} <IconI name=\"md-arrow-down\" size={16} color={'#ff2f2f'}/>\n                  </Text>\n                  <Text style={[Fonts.fontNormal, { color: 'red', fontSize: 13 }]}>\n                  {time}\n                  </Text>\n                </View>\n                <View style={{ flex: 0.25, justifyContent: \"flex-start\", alignItems: \"flex-end\", }}>\n                  <Text style={[Fonts.fontNormal, { color: 'red', fontSize: 16 }]}>\n                   {Number(data.change).toFixed(2)}\n                      </Text>\n                  <Text style={[Fonts.fontNormal, { color: 'red', fontSize: 13 }]}>\n                  {(Number(data.changePercent)*100).toFixed(2)}%\n                      </Text>\n                </View>\n              </View>\n          </Swipeout>\n        )\n    }\n\n\n      });\n\n\n\n\n\n    \t\tconst { opened } = this.state;\n\n    return (\n    <div className=\"container main\">\n          <div className=\"container center\">\n                <img src={logo} className=\"img-responsive\"/>\n                <button className=\"buttonName\"  onClick={this.toggleBox}>Do. Or do not. There is no try </button>\n\n                {opened && (\n        \t\t\t\t\t<div className=\"boxContent\">\n        \t\t\t\t\t     <p>Which of all StarWars movies has the longest opening crawl?</p>\n                       <p className=\"ans\">{this.state.opening_crawl}</p>\n\n                       <p>What character (person) appeared in the most of StarWars films?</p>\n                       <p className=\"ans\">{this.state.people}</p>\n\n                       <p>What species appeared in the most number of StarWars films?</p>\n\n                       <p className=\"ans\">{this.state.species}</p>\n\n        \t\t\t\t\t</div>\n\t\t\t\t        )}\n\n          </div>\n\n    </div>\n\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}