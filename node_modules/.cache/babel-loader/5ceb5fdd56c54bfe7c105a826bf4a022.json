{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/reactJsTest/reacttest/src/component/Main/Button.js\";\nimport React from 'react';\nimport './Button.css';\nimport logo from './images/logo.png';\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      opened: false,\n      opening_crawl: ''\n    };\n    this.toggleBox = this.toggleBox.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://swapi.co/api/films/\").then(res => res.json()).then(result => {\n      var longest = '';\n      var result1 = result.results;\n      var opening_crawl = '';\n\n      for (let i = 1; i < result1.length; i++) {\n        if (result1[i]['opening_crawl'].length > longest.length) {\n          longest = result1[i]['opening_crawl'];\n          opening_crawl = result1[i];\n        }\n      }\n\n      this.setState({\n        opening_crawl: opening_crawl['title']\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true // error\n\n      });\n    }); // people\n\n    fetch(\"https://swapi.co/api/people/\").then(res => res.json()).then(result => {\n      var longest = '';\n      var result1 = result.results;\n      var opening_crawl = '';\n\n      for (let i = 1; i < result1.length; i++) {\n        if (result1[i]['films'].length > longest.length) {\n          longest = result1[i]['films'];\n          people = result1[i];\n        }\n      }\n\n      this.setState({\n        people: people['title']\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true // error\n\n      });\n    });\n  }\n\n  toggleBox() {\n    const opened = this.state.opened;\n    this.setState({\n      opened: !opened\n    });\n  }\n\n  render() {\n    const opened = this.state.opened;\n    return React.createElement(\"div\", {\n      className: \"container main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"img-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"buttonName\",\n      onClick: this.toggleBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Do. Or do not. There is no try \"), opened && React.createElement(\"div\", {\n      className: \"boxContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Which of all StarWars movies has the longest opening crawl (counted by number of characters)?\"), React.createElement(\"p\", {\n      className: \"ans\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.state.opening_crawl), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"What character (person) appeared in the most of StarWars films?\"), React.createElement(\"p\", {\n      className: \"ans\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/apple/Desktop/reactJsTest/reacttest/src/component/Main/Button.js"],"names":["React","logo","Header","Component","constructor","props","state","opened","opening_crawl","toggleBox","bind","componentDidMount","fetch","then","res","json","result","longest","result1","results","i","length","setState","error","isLoaded","people","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Button.css';\nimport logo from './images/logo.png';\n\n\n\nexport default class Header extends React.Component {\n\n  constructor(props) {\n  \t\tsuper(props);\n  \t\tthis.state = {\n  \t\t\topened: false,\n        opening_crawl:'',\n  \t\t};\n  \t\tthis.toggleBox = this.toggleBox.bind(this);\n  \t}\n\n  componentDidMount() {\n\n    fetch(\"https://swapi.co/api/films/\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n\n      var longest='';\n      var result1 = result.results;\n      var opening_crawl = '';\n\n\n      for (let i = 1; i < result1.length; i++) {\n          if (result1[i]['opening_crawl'].length > longest.length) {\n              longest = result1[i]['opening_crawl'];\n\n              opening_crawl = result1[i];\n          }\n      }\n      this.setState({opening_crawl:opening_crawl['title']});\n\n\n        },\n\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            // error\n          });\n        }\n      )\n\n      // people\n\n      fetch(\"https://swapi.co/api/people/\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n\n        var longest='';\n        var result1 = result.results;\n        var opening_crawl = '';\n\n\n        for (let i = 1; i < result1.length; i++) {\n            if (result1[i]['films'].length > longest.length) {\n                longest = result1[i]['films'];\n\n                people = result1[i];\n            }\n        }\n        this.setState({people:people['title']});\n\n\n          },\n\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              // error\n            });\n          }\n        )\n\n\n\n }\n\n  \ttoggleBox() {\n\n\n\n  \t\tconst { opened } = this.state;\n  \t\tthis.setState({\n  \t\t\topened: !opened,\n  \t\t});\n  \t}\n\n\n  render() {\n\n    \t\tconst { opened } = this.state;\n\n    return (\n    <div className=\"container main\">\n          <div className=\"container center\">\n                <img src={logo} className=\"img-responsive\"/>\n                <button className=\"buttonName\"  onClick={this.toggleBox}>Do. Or do not. There is no try </button>\n\n                {opened && (\n        \t\t\t\t\t<div className=\"boxContent\">\n        \t\t\t\t\t     <p>Which of all StarWars movies has the longest opening crawl (counted by number of characters)?</p>\n                       <p className=\"ans\">{this.state.opening_crawl}</p>\n\n                       <p>What character (person) appeared in the most of StarWars films?</p>\n                       <p className=\"ans\"></p>\n\n\n        \t\t\t\t\t</div>\n\t\t\t\t        )}\n\n          </div>\n\n    </div>\n\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}